{"ast":null,"code":"var _jsxFileName = \"D:\\\\Faculdade\\\\CRUD-Produtos\\\\crud-products\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Parse from \"parse/dist/parse.min.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst app_id = process.env.REACT_APP_PARSE_APP_ID;\nconst host_url = process.env.REACT_APP_PARSE_HOST_URL;\nconst javascript_key = process.env.REACT_APP_PARSE_JAVASCRIPT_KEY;\nParse.initialize(app_id, javascript_key);\nParse.serverURL = host_url;\nfunction App() {\n  _s();\n  const [makes, setMakes] = useState([]);\n\n  //CREATE\n  const createMake = async () => {\n    console.log(\"Aqui\");\n    /* let Makes = new Parse.Object('makes');\n    Makes.set('name', \"mc saci\"); */\n    // After setting the to-do values, save it on the server\n    /*   try {\n        await Makes.save(); */\n    // Success\n    /* alert('Success! To-do created!');\n    // Refresh to-dos list to show the new one (you will create this function later) */\n    /*   fetchAllMakes()\n      return true;\n    } catch (error) { */\n    // Error can be caused by lack of Internet connection\n    /*   alert(`Error! ${error}`);\n      return false;\n    }; */\n  };\n\n  //READ\n  const fetchAllMakes = async () => {\n    try {\n      const query = new Parse.Query(\"makes\");\n      const allMakes = await query.find();\n      setMakes(allMakes);\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n    }\n  };\n\n  /* useEffect(() => {\n    fetchAllMakes();\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [makes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.get('name')\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createMake()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rFI+647VgnSDeiVLkbbOpaux8lk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Parse","jsxDEV","_jsxDEV","Fragment","_Fragment","app_id","process","env","REACT_APP_PARSE_APP_ID","host_url","REACT_APP_PARSE_HOST_URL","javascript_key","REACT_APP_PARSE_JAVASCRIPT_KEY","initialize","serverURL","App","_s","makes","setMakes","createMake","console","log","fetchAllMakes","query","Query","allMakes","find","error","children","map","item","get","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Faculdade/CRUD-Produtos/crud-products/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Parse from \"parse/dist/parse.min.js\";\n\nconst app_id = process.env.REACT_APP_PARSE_APP_ID;\nconst host_url = process.env.REACT_APP_PARSE_HOST_URL;\nconst javascript_key = process.env.REACT_APP_PARSE_JAVASCRIPT_KEY;\nParse.initialize(app_id, javascript_key);\nParse.serverURL = host_url;\n\nfunction App() {\n  const [makes, setMakes] = useState([]);\n\n  //CREATE\n  const createMake = async () => {\n    console.log(\"Aqui\")\n    /* let Makes = new Parse.Object('makes');\n    Makes.set('name', \"mc saci\"); */\n    // After setting the to-do values, save it on the server\n  /*   try {\n      await Makes.save(); */\n      // Success\n      /* alert('Success! To-do created!');\n      // Refresh to-dos list to show the new one (you will create this function later) */\n    /*   fetchAllMakes()\n      return true;\n    } catch (error) { */\n      // Error can be caused by lack of Internet connection\n    /*   alert(`Error! ${error}`);\n      return false;\n    }; */\n  }\n  \n  //READ\n  const fetchAllMakes = async () => {\n    try {\n      const query = new Parse.Query(\"makes\");\n      const allMakes = await query.find();\n      setMakes(allMakes);\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n    }\n  };\n\n  /* useEffect(() => {\n    fetchAllMakes();\n  }, []); */\n\n  return (\n    <>\n      {makes.map(item => <div key={item.id}>{item.get('name')}</div>)}\n      <button onClick={() => createMake()}></button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACjD,MAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAG,CAACG,wBAAwB;AACrD,MAAMC,cAAc,GAAGL,OAAO,CAACC,GAAG,CAACK,8BAA8B;AACjEZ,KAAK,CAACa,UAAU,CAACR,MAAM,EAAEM,cAAc,CAAC;AACxCX,KAAK,CAACc,SAAS,GAAGL,QAAQ;AAE1B,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB;AACJ;IACI;IACF;AACF;IACM;IACA;AACN;IACI;AACJ;AACA;IACM;IACF;AACJ;AACA;EACE,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,GAAG,IAAIvB,KAAK,CAACwB,KAAK,CAAC,OAAO,CAAC;MACtC,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,IAAI,CAAC,CAAC;MACnCR,QAAQ,CAACO,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;;EAED;AACF;AACA;;EAEE,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,GACGX,KAAK,CAACY,GAAG,CAACC,IAAI,iBAAI5B,OAAA;MAAA0B,QAAA,EAAoBE,IAAI,CAACC,GAAG,CAAC,MAAM;IAAC,GAA1BD,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyB,CAAC,CAAC,eAC/DlC,OAAA;MAAQmC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA,eAC9C,CAAC;AAEP;AAACpB,EAAA,CA5CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}